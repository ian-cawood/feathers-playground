{"/Users/ian/Documents/learning/feathers/feathers-chat/src/app.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":47}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":67}},"9":{"start":{"line":12,"column":24},"end":{"line":12,"column":77}},"10":{"start":{"line":13,"column":18},"end":{"line":13,"column":65}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":67}},"12":{"start":{"line":15,"column":17},"end":{"line":15,"column":53}},"13":{"start":{"line":16,"column":21},"end":{"line":16,"column":61}},"14":{"start":{"line":17,"column":19},"end":{"line":17,"column":57}},"15":{"start":{"line":18,"column":20},"end":{"line":18,"column":59}},"16":{"start":{"line":19,"column":19},"end":{"line":19,"column":57}},"17":{"start":{"line":20,"column":25},"end":{"line":20,"column":69}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":51}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"20":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}},"21":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}},"22":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}},"23":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"24":{"start":{"line":30,"column":0},"end":{"line":30,"column":58}},"25":{"start":{"line":31,"column":0},"end":{"line":31,"column":88}},"26":{"start":{"line":33,"column":0},"end":{"line":33,"column":58}},"27":{"start":{"line":35,"column":0},"end":{"line":35,"column":40}},"28":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}},"29":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}},"30":{"start":{"line":39,"column":0},"end":{"line":39,"column":40}},"31":{"start":{"line":41,"column":0},"end":{"line":41,"column":34}},"32":{"start":{"line":43,"column":0},"end":{"line":43,"column":34}},"33":{"start":{"line":45,"column":0},"end":{"line":45,"column":38}},"34":{"start":{"line":46,"column":0},"end":{"line":46,"column":70}},"35":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}},"36":{"start":{"line":48,"column":0},"end":{"line":48,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":15,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"f":{"0":15},"b":{"0":[1,1,1],"1":[6,9],"2":[15,15]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/app.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/app.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,kEAAoC;AACpC,8DAAmC;AACnC,oDAA4B;AAC5B,gDAAwB;AAExB,oEAA4C;AAC5C,8EAAsD;AACtD,kEAA0C;AAC1C,oEAA4C;AAI5C,sDAA8B;AAC9B,8DAAsC;AACtC,0DAAkC;AAClC,4DAAmC;AACnC,0DAAkC;AAClC,sEAA8C;AAC9C,wEAAwE;AAExE,MAAM,GAAG,GAAgB,iBAAO,CAAC,kBAAQ,EAAE,CAAC,CAAC;AAE7C,yBAAyB;AACzB,GAAG,CAAC,SAAS,CAAC,uBAAa,EAAE,CAAC,CAAC;AAC/B,+DAA+D;AAC/D,GAAG,CAAC,GAAG,CAAC,gBAAM,EAAE,CAAC,CAAC;AAClB,GAAG,CAAC,GAAG,CAAC,cAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,qBAAQ,EAAE,CAAC,CAAC;AACpB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAChD,GAAG,CAAC,GAAG,CAAC,uBAAO,CAAC,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;AAC9D,yBAAyB;AACzB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAEhD,+BAA+B;AAC/B,GAAG,CAAC,SAAS,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9B,GAAG,CAAC,SAAS,CAAC,kBAAQ,EAAE,CAAC,CAAC;AAE1B,yDAAyD;AACzD,GAAG,CAAC,SAAS,CAAC,oBAAU,CAAC,CAAC;AAC1B,GAAG,CAAC,SAAS,CAAC,wBAAc,CAAC,CAAC;AAC9B,gDAAgD;AAChD,GAAG,CAAC,SAAS,CAAC,kBAAQ,CAAC,CAAC;AACxB,0CAA0C;AAC1C,GAAG,CAAC,SAAS,CAAC,kBAAQ,CAAC,CAAC;AAExB,wDAAwD;AACxD,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5B,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,YAAY,CAAC,EAAE,MAAM,EAAN,gBAAM,EAAS,CAAC,CAAC,CAAC;AAEjD,GAAG,CAAC,KAAK,CAAC,mBAAQ,CAAC,CAAC;AAEpB,kBAAe,GAAG,CAAC","sourcesContent":["import path from 'path';\nimport favicon from 'serve-favicon';\nimport compress from 'compression';\nimport helmet from 'helmet';\nimport cors from 'cors';\n\nimport feathers from '@feathersjs/feathers';\nimport configuration from '@feathersjs/configuration';\nimport express from '@feathersjs/express';\nimport socketio from '@feathersjs/socketio';\n\n\nimport { Application } from './declarations';\nimport logger from './logger';\nimport middleware from './middleware';\nimport services from './services';\nimport appHooks from './app.hooks';\nimport channels from './channels';\nimport authentication from './authentication';\n// Don't remove this comment. It's needed to format import lines nicely.\n\nconst app: Application = express(feathers());\n\n// Load app configuration\napp.configure(configuration());\n// Enable security, CORS, compression, favicon and body parsing\napp.use(helmet());\napp.use(cors());\napp.use(compress());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(favicon(path.join(app.get('public'), 'favicon.ico')));\n// Host the public folder\napp.use('/', express.static(app.get('public')));\n\n// Set up Plugins and providers\napp.configure(express.rest());\napp.configure(socketio());\n\n// Configure other middleware (see `middleware/index.js`)\napp.configure(middleware);\napp.configure(authentication);\n// Set up our services (see `services/index.js`)\napp.configure(services);\n// Set up event channels (see channels.js)\napp.configure(channels);\n\n// Configure a middleware for 404s and the error handler\napp.use(express.notFound());\napp.use(express.errorHandler({ logger } as any));\n\napp.hooks(appHooks);\n\nexport default app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"392b15c076677c563bce70e34a71c08df8c2ddb8"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/logger.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/logger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":5,"column":15},"end":{"line":12,"column":2}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/logger.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/logger.ts"],"names":[],"mappings":";;AAAA,qCAA2D;AAE3D,wGAAwG;AACxG,MAAM,MAAM,GAAG,sBAAY,CAAC;IAC1B,sDAAsD;IACtD,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,gBAAM,CAAC,OAAO,CACpB,gBAAM,CAAC,KAAK,EAAE,EACd,gBAAM,CAAC,MAAM,EAAE,CAChB;IACD,UAAU,EAAE;QACV,IAAI,oBAAU,CAAC,OAAO,EAAE;KACzB;CACF,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { createLogger, format, transports } from 'winston';\n\n// Configure the Winston logger. For the complete documentation see https://github.com/winstonjs/winston\nconst logger = createLogger({\n  // To see more detailed errors, change this to 'debug'\n  level: 'info',\n  format: format.combine(\n    format.splat(),\n    format.simple()\n  ),\n  transports: [\n    new transports.Console()\n  ],\n});\n\nexport default logger;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a7723e4562856f240c43144ffb1100a79f92cf21"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/middleware/index.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/middleware/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}}},"fnMap":{"0":{"name":"default_1","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":24},"end":{"line":5,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/middleware/index.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/middleware/index.ts"],"names":[],"mappings":";;AACA,wEAAwE;AAExE,mBAAyB,GAAgB;AACzC,CAAC;AADD,4BACC","sourcesContent":["import { Application } from '../declarations';\n// Don't remove this comment. It's needed to format import lines nicely.\n\nexport default function (app: Application) {\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88d004b9ffef42eaa3d05c3eda45930bc0293191"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/index.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":24},"end":{"line":6,"column":73}},"4":{"start":{"line":7,"column":27},"end":{"line":7,"column":82}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":46}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"default_1","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":24},"end":{"line":12,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":2,"1":1},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/index.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/index.ts"],"names":[],"mappings":";;;;;AACA,0EAA0C;AAC1C,mFAAmD;AACnD,wEAAwE;AAExE,mBAAyB,GAAgB;IACvC,GAAG,CAAC,SAAS,CAAC,uBAAK,CAAC,CAAC;IACrB,GAAG,CAAC,SAAS,CAAC,0BAAQ,CAAC,CAAC;AAC1B,CAAC;AAHD,4BAGC","sourcesContent":["import { Application } from '../declarations';\nimport users from './users/users.service';\nimport messages from './messages/messages.service';\n// Don't remove this comment. It's needed to format import lines nicely.\n\nexport default function (app: Application) {\n  app.configure(users);\n  app.configure(messages);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de00adf84a7e41bdfc16b83ecd3517821ca04ce1"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.service.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":22},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":74}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":63}},"6":{"start":{"line":10,"column":20},"end":{"line":13,"column":5}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":61}},"8":{"start":{"line":17,"column":20},"end":{"line":17,"column":40}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":41}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"default_1","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":24},"end":{"line":19,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":2,"1":1},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.service.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.service.ts"],"names":[],"mappings":";;;;;AAGA,+CAAsC;AACtC,2EAAmD;AACnD,gEAAkC;AASlC,mBAAyB,GAAgB;IACvC,MAAM,OAAO,GAAG;QACd,KAAK,EAAE,qBAAW,CAAC,GAAG,CAAC;QACvB,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC;KAC9B,CAAC;IAEF,sDAAsD;IACtD,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,mBAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAE3C,4DAA4D;IAC5D,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAErC,OAAO,CAAC,KAAK,CAAC,qBAAK,CAAC,CAAC;AACvB,CAAC;AAbD,4BAaC","sourcesContent":["// Initializes the `users` service on path `/users`\nimport { ServiceAddons } from '@feathersjs/feathers';\nimport { Application } from '../../declarations';\nimport { Users } from './users.class';\nimport createModel from '../../models/users.model';\nimport hooks from './users.hooks';\n\n// Add this service to the service type index\ndeclare module '../../declarations' {\n  interface ServiceTypes {\n    'users': Users & ServiceAddons<any>;\n  }\n}\n\nexport default function (app: Application) {\n  const options = {\n    Model: createModel(app),\n    paginate: app.get('paginate')\n  };\n\n  // Initialize our service with any options it requires\n  app.use('/users', new Users(options, app));\n\n  // Get our initialized service so that we can register hooks\n  const service = app.service('users');\n\n  service.hooks(hooks);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"294581afb5183d364775a800387ec2fcd4161f41"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.class.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.class.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":51}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":48}},"5":{"start":{"line":9,"column":20},"end":{"line":9,"column":51}},"6":{"start":{"line":11,"column":14},"end":{"line":11,"column":20}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":23}},"8":{"start":{"line":18,"column":46},"end":{"line":18,"column":50}},"9":{"start":{"line":20,"column":21},"end":{"line":20,"column":97}},"10":{"start":{"line":22,"column":23},"end":{"line":22,"column":56}},"11":{"start":{"line":24,"column":25},"end":{"line":29,"column":9}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":46}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":30},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":32,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":4,"9":4,"10":4,"11":4,"12":4,"13":1},"f":{"0":1,"1":1,"2":4},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.class.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.class.ts"],"names":[],"mappings":";;;;;AAAA,oDAA4B;AAE5B,iDAA4D;AAG5D,6BAA6B;AAC7B,MAAM,WAAW,GAAG,+BAA+B,CAAC;AACpD,6CAA6C;AAC7C,MAAM,KAAK,GAAG,MAAM,CAAC;AAWrB,MAAa,KAAM,SAAQ,uBAAiB;IAC1C,YAAY,OAAoC,EAAE,GAAgB;QAChE,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAED,MAAM,CAAE,IAAc,EAAE,MAAe;QACrC,4DAA4D;QAC5D,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAC3C,kFAAkF;QAClF,MAAM,IAAI,GAAG,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChF,sBAAsB;QACtB,MAAM,MAAM,GAAG,GAAG,WAAW,IAAI,IAAI,IAAI,KAAK,EAAE,CAAC;QACjD,oBAAoB;QACpB,MAAM,QAAQ,GAAG;YACf,KAAK;YACL,QAAQ;YACR,QAAQ;YACR,MAAM;SACP,CAAC;QAEF,wEAAwE;QACxE,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;CACF;AAvBD,sBAuBC","sourcesContent":["import crypto from 'crypto';\nimport { Params } from '@feathersjs/feathers';\nimport { Service, NedbServiceOptions } from 'feathers-nedb';\nimport { Application } from '../../declarations';\n\n// The Gravatar image service\nconst gravatarUrl = 'https://s.gravatar.com/avatar';\n// The size query. Our chat needs 60px images\nconst query = 's=60';\n\n// A type interface for our user (it does not validate any data)\ninterface UserData {\n  _id?: string;\n  email: string;\n  password: string;\n  avatar?: string;\n  githubId?: string;\n}\n\nexport class Users extends Service<UserData> {\n  constructor(options: Partial<NedbServiceOptions>, app: Application) {\n    super(options);\n  }\n\n  create (data: UserData, params?: Params) {\n    // This is the information we want from the user signup data\n    const { email, password, githubId } = data;\n    // Gravatar uses MD5 hashes from an email address (all lowercase) to get the image\n    const hash = crypto.createHash('md5').update(email.toLowerCase()).digest('hex');\n    // The full avatar URL\n    const avatar = `${gravatarUrl}/${hash}?${query}`;\n    // The complete user\n    const userData = {\n      email,\n      password,\n      githubId,\n      avatar\n    };\n\n    // Call the original `create` method with existing `params` and new data\n    return super.create(userData, params);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de102743d264836a2e8cda809cbd5689e0818da8"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/models/users.model.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/models/users.model.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":9,"column":19},"end":{"line":9,"column":34}},"6":{"start":{"line":10,"column":18},"end":{"line":13,"column":6}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":60}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"default_1","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":24},"end":{"line":16,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":2,"1":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/models/users.model.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/models/users.model.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,gDAAwB;AAGxB,mBAAyB,GAAgB;IACvC,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC/B,MAAM,KAAK,GAAG,IAAI,cAAI,CAAC;QACrB,QAAQ,EAAE,cAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;QACvC,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IAEH,KAAK,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAExD,OAAO,KAAK,CAAC;AACf,CAAC;AAVD,4BAUC","sourcesContent":["import NeDB from 'nedb';\nimport path from 'path';\nimport { Application } from '../declarations';\n\nexport default function (app: Application) {\n  const dbPath = app.get('nedb');\n  const Model = new NeDB({\n    filename: path.join(dbPath, 'users.db'),\n    autoload: true\n  });\n\n  Model.ensureIndex({ fieldName: 'email', unique: true });\n\n  return Model;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6545c65d982203f11d29c659f3bb1356253de8fd"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.hooks.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.hooks.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"11":{"start":{"line":10,"column":31},"end":{"line":10,"column":82}},"12":{"start":{"line":11,"column":14},"end":{"line":11,"column":71}},"13":{"start":{"line":13,"column":25},"end":{"line":13,"column":53}},"14":{"start":{"line":14,"column":34},"end":{"line":14,"column":45}},"15":{"start":{"line":15,"column":0},"end":{"line":47,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5}},"s":{"0":1,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.hooks.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/users/users.hooks.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mFAAqE;AACrE,wEAA0D;AAC1D,wEAAwE;AAExE,MAAM,EAAE,YAAY,EAAE,GAAG,sBAAsB,CAAC,KAAK,CAAC;AACtD,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;AAE9C,kBAAe;IACb,MAAM,EAAE;QACN,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,CAAE,YAAY,CAAC,KAAK,CAAC,CAAE;QAC7B,GAAG,EAAE,CAAE,YAAY,CAAC,KAAK,CAAC,CAAE;QAC5B,MAAM,EAAE,CAAE,YAAY,CAAC,UAAU,CAAC,CAAE;QACpC,MAAM,EAAE,CAAE,YAAY,CAAC,UAAU,CAAC,EAAG,YAAY,CAAC,KAAK,CAAC,CAAE;QAC1D,KAAK,EAAE,CAAE,YAAY,CAAC,UAAU,CAAC,EAAG,YAAY,CAAC,KAAK,CAAC,CAAE;QACzD,MAAM,EAAE,CAAE,YAAY,CAAC,KAAK,CAAC,CAAE;KAChC;IAED,KAAK,EAAE;QACL,GAAG,EAAE;YACH,2DAA2D;YAC3D,+BAA+B;YAC/B,OAAO,CAAC,UAAU,CAAC;SACpB;QACD,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;IAED,KAAK,EAAE;QACL,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;CACF,CAAC","sourcesContent":["import * as feathersAuthentication from '@feathersjs/authentication';\nimport * as local from '@feathersjs/authentication-local';\n// Don't remove this comment. It's needed to format import lines nicely.\n\nconst { authenticate } = feathersAuthentication.hooks;\nconst { hashPassword, protect } = local.hooks;\n\nexport default {\n  before: {\n    all: [],\n    find: [ authenticate('jwt') ],\n    get: [ authenticate('jwt') ],\n    create: [ hashPassword('password') ],\n    update: [ hashPassword('password'),  authenticate('jwt') ],\n    patch: [ hashPassword('password'),  authenticate('jwt') ],\n    remove: [ authenticate('jwt') ]\n  },\n\n  after: {\n    all: [ \n      // Make sure the password field is never sent to the client\n      // Always must be the last hook\n      protect('password')\n    ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93313af321e9f67897fd4499cfb513981c6187e0"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.service.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":80}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":69}},"6":{"start":{"line":10,"column":20},"end":{"line":13,"column":5}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":70}},"8":{"start":{"line":17,"column":20},"end":{"line":17,"column":43}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":44}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"default_1","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":24},"end":{"line":19,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":2,"1":1},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.service.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.service.ts"],"names":[],"mappings":";;;;;AAGA,qDAA4C;AAC5C,iFAAsD;AACtD,sEAAqC;AASrC,mBAAyB,GAAgB;IACvC,MAAM,OAAO,GAAG;QACd,KAAK,EAAE,wBAAW,CAAC,GAAG,CAAC;QACvB,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC;KAC9B,CAAC;IAEF,sDAAsD;IACtD,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,yBAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAEjD,4DAA4D;IAC5D,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAExC,OAAO,CAAC,KAAK,CAAC,wBAAK,CAAC,CAAC;AACvB,CAAC;AAbD,4BAaC","sourcesContent":["// Initializes the `messages` service on path `/messages`\nimport { ServiceAddons } from '@feathersjs/feathers';\nimport { Application } from '../../declarations';\nimport { Messages } from './messages.class';\nimport createModel from '../../models/messages.model';\nimport hooks from './messages.hooks';\n\n// Add this service to the service type index\ndeclare module '../../declarations' {\n  interface ServiceTypes {\n    'messages': Messages & ServiceAddons<any>;\n  }\n}\n\nexport default function (app: Application) {\n  const options = {\n    Model: createModel(app),\n    paginate: app.get('paginate')\n  };\n\n  // Initialize our service with any options it requires\n  app.use('/messages', new Messages(options, app));\n\n  // Get our initialized service so that we can register hooks\n  const service = app.service('messages');\n\n  service.hooks(hooks);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d27fb4d8cd6ef6b24d84a4ec87917b51c46ec3be"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.class.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.class.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":3,"column":48}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":7,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.class.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.class.ts"],"names":[],"mappings":";;AAAA,iDAA4D;AAG5D,MAAa,QAAS,SAAQ,uBAAO;IACnC,YAAY,OAAoC,EAAE,GAAgB;QAChE,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;CACF;AAJD,4BAIC;AAAA,CAAC","sourcesContent":["import { Service, NedbServiceOptions } from 'feathers-nedb';\nimport { Application } from '../../declarations';\n\nexport class Messages extends Service {\n  constructor(options: Partial<NedbServiceOptions>, app: Application) {\n    super(options);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"51c12a7cc596df53f2b870363ab86aa8f440f35e"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/models/messages.model.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/models/messages.model.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":9,"column":19},"end":{"line":9,"column":34}},"6":{"start":{"line":10,"column":18},"end":{"line":13,"column":6}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"default_1","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":24},"end":{"line":15,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":2,"1":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/models/messages.model.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/models/messages.model.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,gDAAwB;AAGxB,mBAAyB,GAAgB;IACvC,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC/B,MAAM,KAAK,GAAG,IAAI,cAAI,CAAC;QACrB,QAAQ,EAAE,cAAI,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC;QAC1C,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACf,CAAC;AARD,4BAQC","sourcesContent":["import NeDB from 'nedb';\nimport path from 'path';\nimport { Application } from '../declarations';\n\nexport default function (app: Application) {\n  const dbPath = app.get('nedb');\n  const Model = new NeDB({\n    filename: path.join(dbPath, 'messages.db'),\n    autoload: true\n  });\n\n  return Model;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"762fb50ce759055928b3e84be66695c41c971fd9"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.hooks.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.hooks.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":22},"end":{"line":11,"column":1}},"11":{"start":{"line":10,"column":4},"end":{"line":10,"column":62}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"13":{"start":{"line":13,"column":23},"end":{"line":13,"column":74}},"14":{"start":{"line":14,"column":26},"end":{"line":14,"column":81}},"15":{"start":{"line":15,"column":24},"end":{"line":15,"column":77}},"16":{"start":{"line":17,"column":25},"end":{"line":17,"column":45}},"17":{"start":{"line":18,"column":0},"end":{"line":46,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":56},"end":{"line":9,"column":57}},"loc":{"start":{"line":9,"column":71},"end":{"line":11,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5},"5":{"loc":{"start":{"line":9,"column":22},"end":{"line":11,"column":1}},"type":"binary-expr","locations":[{"start":{"line":9,"column":23},"end":{"line":9,"column":27}},{"start":{"line":9,"column":31},"end":{"line":9,"column":51}},{"start":{"line":9,"column":56},"end":{"line":11,"column":1}}],"line":9},"6":{"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":61}},"type":"cond-expr","locations":[{"start":{"line":10,"column":37},"end":{"line":10,"column":40}},{"start":{"line":10,"column":43},"end":{"line":10,"column":61}}],"line":10},"7":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":33}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":15}},{"start":{"line":10,"column":19},"end":{"line":10,"column":33}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[2,0],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.hooks.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/services/messages/messages.hooks.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2EAA6D;AAC7D,kFAAyD;AACzD,8EAAqD;AACrD,wEAAwE;AAExE,MAAM,EAAE,YAAY,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC;AAE9C,kBAAe;IACb,MAAM,EAAE;QACN,GAAG,EAAE,CAAE,YAAY,CAAC,KAAK,CAAC,CAAE;QAC5B,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,CAAC,yBAAc,EAAE,CAAC;QAC1B,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;IAED,KAAK,EAAE;QACL,GAAG,EAAE,CAAC,uBAAY,EAAE,CAAC;QACrB,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;IAED,KAAK,EAAE;QACL,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;CACF,CAAC","sourcesContent":["import * as authentication from '@feathersjs/authentication';\nimport processMessage from '../../hooks/process-message';\nimport populateUser from '../../hooks/populate-user';\n// Don't remove this comment. It's needed to format import lines nicely.\n\nconst { authenticate } = authentication.hooks;\n\nexport default {\n  before: {\n    all: [ authenticate('jwt') ],\n    find: [],\n    get: [],\n    create: [processMessage()],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  after: {\n    all: [populateUser()],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e21aa3e1eeb3989d5bd4c52eaaf1b9132eac93b5"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/process-message.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/process-message.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":27,"column":2}},"2":{"start":{"line":4,"column":4},"end":{"line":26,"column":6}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":8,"column":12},"end":{"line":8,"column":58}},"6":{"start":{"line":11,"column":21},"end":{"line":11,"column":40}},"7":{"start":{"line":13,"column":21},"end":{"line":15,"column":30}},"8":{"start":{"line":17,"column":8},"end":{"line":23,"column":10}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":18},"end":{"line":3,"column":19}},"loc":{"start":{"line":3,"column":24},"end":{"line":27,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":11},"end":{"line":4,"column":12}},"loc":{"start":{"line":4,"column":30},"end":{"line":26,"column":5}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},{"start":{"line":7,"column":8},"end":{"line":9,"column":9}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{"0":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/process-message.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/process-message.ts"],"names":[],"mappings":";;AAIA,kBAAe,GAAU,EAAE;IACzB,OAAO,KAAK,EAAE,OAAoB,EAAE,EAAE;QACpC,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;QAEzB,yCAAyC;QACzC,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC/C;QAED,yBAAyB;QACzB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACjC,0BAA0B;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI;YACpB,+CAA+C;aAC9C,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAErB,4EAA4E;QAC5E,OAAO,CAAC,IAAI,GAAG;YACb,IAAI;YACJ,kBAAkB;YAClB,MAAM,EAAE,IAAI,CAAC,GAAG;YAChB,uBAAuB;YACvB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAChC,CAAC;QAEF,wDAAwD;QACxD,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC,CAAA","sourcesContent":["// Use this hook to manipulate incoming or outgoing data.\n// For more information on hooks see: http://docs.feathersjs.com/api/hooks.html\nimport { Hook, HookContext } from '@feathersjs/feathers';\n\nexport default () : Hook => {\n  return async (context: HookContext) => {\n    const { data } = context;\n\n    // Throw an error if we didn't get a text\n    if(!data.text) {\n      throw new Error('A message must have a text');\n    }\n\n    // The authenticated user\n    const user = context.params.user;\n    // The actual message text\n    const text = data.text\n      // Messages can't be longer than 400 characters\n      .substring(0, 400);\n\n    // Override the original data (so that people can't submit additional stuff)\n    context.data = {\n      text,\n      // Set the user id\n      userId: user._id,\n      // Add the current date\n      createdAt: new Date().getTime()\n    };\n\n    // Best practice: hooks should always return the context\n    return context;\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f36d71454a0532a664cb8832afeefa9880e7137"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/populate-user.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/populate-user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":29,"column":2}},"2":{"start":{"line":4,"column":4},"end":{"line":28,"column":6}},"3":{"start":{"line":6,"column":48},"end":{"line":6,"column":55}},"4":{"start":{"line":8,"column":24},"end":{"line":17,"column":9}},"5":{"start":{"line":11,"column":25},"end":{"line":11,"column":79}},"6":{"start":{"line":13,"column":12},"end":{"line":16,"column":14}},"7":{"start":{"line":19,"column":8},"end":{"line":26,"column":9}},"8":{"start":{"line":21,"column":12},"end":{"line":21,"column":78}},"9":{"start":{"line":25,"column":12},"end":{"line":25,"column":51}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":18},"end":{"line":3,"column":19}},"loc":{"start":{"line":3,"column":24},"end":{"line":29,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":11},"end":{"line":4,"column":12}},"loc":{"start":{"line":4,"column":30},"end":{"line":28,"column":5}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":24},"end":{"line":8,"column":25}},"loc":{"start":{"line":8,"column":43},"end":{"line":17,"column":9}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":26,"column":9}},{"start":{"line":19,"column":8},"end":{"line":26,"column":9}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/populate-user.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/hooks/populate-user.ts"],"names":[],"mappings":";;AAIA,kBAAe,GAAS,EAAE;IACxB,OAAO,KAAK,EAAE,OAAoB,EAAE,EAAE;QACpC,mEAAmE;QACnE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;QAChD,yDAAyD;QACzD,MAAM,OAAO,GAAG,KAAK,EAAE,OAAY,EAAE,EAAE;YACrC,6DAA6D;YAC7D,8CAA8C;YAC9C,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAEpE,yDAAyD;YACzD,OAAO;gBACL,GAAG,OAAO;gBACV,IAAI;aACL,CAAC;QACJ,CAAC,CAAC;QAEF,sDAAsD;QACtD,IAAI,MAAM,KAAK,MAAM,EAAE;YACrB,iDAAiD;YACjD,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;SACnE;aAAM;YACL,0CAA0C;YAC1C,OAAO,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC;SACxC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;AACJ,CAAC,CAAA","sourcesContent":["// Use this hook to manipulate incoming or outgoing data.\n// For more information on hooks see: http://docs.feathersjs.com/api/hooks.html\nimport { Hook, HookContext } from '@feathersjs/feathers';\n\nexport default (): Hook => {\n  return async (context: HookContext) => {\n    // Get `app`, `method`, `params` and `result` from the hook context\n    const { app, method, result, params } = context;\n    // Function that adds the user to a single message object\n    const addUser = async (message: any) => {\n      // Get the user based on their id, pass the `params` along so\n      // that we get a safe version of the user data\n      const user = await app.service('users').get(message.userId, params);\n\n      // Merge the message content to include the `user` object\n      return {\n        ...message,\n        user\n      };\n    };\n\n    // In a find method we need to process the entire page\n    if (method === 'find') {\n      // Map all data to include the `user` information\n      context.result.data = await Promise.all(result.data.map(addUser));\n    } else {\n      // Otherwise just update the single result\n      context.result = await addUser(result);\n    }\n\n    return context;\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"132adb96da311afde15aabcff90dc0c85992432b"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/app.hooks.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/app.hooks.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":62}},"1":{"start":{"line":5,"column":0},"end":{"line":33,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/app.hooks.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/app.hooks.ts"],"names":[],"mappings":";AAAA,+CAA+C;AAC/C,wEAAwE;;AAExE,kBAAe;IACb,MAAM,EAAE;QACN,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;IAED,KAAK,EAAE;QACL,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;IAED,KAAK,EAAE;QACL,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,EAAE;QACP,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;KACX;CACF,CAAC","sourcesContent":["// Application hooks that run for every service\n// Don't remove this comment. It's needed to format import lines nicely.\n\nexport default {\n  before: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  after: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b9b3d8015fc9a096adc6b444037ada9be204abe7"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/channels.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/channels.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":5,"column":4},"end":{"line":8,"column":5}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":15}},"4":{"start":{"line":9,"column":4},"end":{"line":12,"column":7}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":50}},"6":{"start":{"line":13,"column":4},"end":{"line":32,"column":7}},"7":{"start":{"line":16,"column":8},"end":{"line":31,"column":9}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":55}},"9":{"start":{"line":22,"column":12},"end":{"line":22,"column":58}},"10":{"start":{"line":34,"column":4},"end":{"line":40,"column":7}},"11":{"start":{"line":37,"column":8},"end":{"line":37,"column":163}},"12":{"start":{"line":39,"column":8},"end":{"line":39,"column":44}},"13":{"start":{"line":52,"column":0},"end":{"line":52,"column":28}}},"fnMap":{"0":{"name":"default_1","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":24},"end":{"line":51,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":25},"end":{"line":9,"column":26}},"loc":{"start":{"line":9,"column":41},"end":{"line":12,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":20},"end":{"line":13,"column":21}},"loc":{"start":{"line":13,"column":52},"end":{"line":32,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":16},"end":{"line":34,"column":17}},"loc":{"start":{"line":34,"column":32},"end":{"line":40,"column":5}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":8,"column":5}},{"start":{"line":5,"column":4},"end":{"line":8,"column":5}}],"line":5},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":31,"column":9}},{"start":{"line":16,"column":8},"end":{"line":31,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":5,"12":5,"13":1},"f":{"0":1,"1":0,"2":0,"3":5},"b":{"0":[0,1],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/channels.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/channels.ts"],"names":[],"mappings":";;AAAA,yCAAuC;AAIvC,mBAAwB,GAAgB;IACtC,IAAG,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU,EAAE;QACpC,gEAAgE;QAChE,OAAO;KACR;IAED,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,UAAe,EAAE,EAAE;QACvC,iEAAiE;QACjE,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,UAAe,EAAE,EAAE,UAAU,EAAO,EAAE,EAAE;QACvD,6CAA6C;QAC7C,sDAAsD;QACtD,IAAG,UAAU,EAAE;YACb,gDAAgD;YAChD,gCAAgC;YAEhC,mDAAmD;YACnD,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE3C,2CAA2C;YAC3C,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE9C,8DAA8D;YAE9D,mDAAmD;YACnD,+DAA+D;YAE/D,yCAAyC;YACzC,2GAA2G;YAE3G,sEAAsE;YACtE,qDAAqD;YACrD,mDAAmD;SACpD;IACH,CAAC,CAAC,CAAC;IAEH,0CAA0C;IAC1C,GAAG,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,IAAiB,EAAE,EAAE;QAC3C,wEAAwE;QACxE,8EAA8E;QAE9E,OAAO,CAAC,GAAG,CAAC,6IAA6I,CAAC,CAAC,CAAC,sBAAsB;QAElL,oEAAoE;QACpE,OAAO,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,0DAA0D;IAC1D,+EAA+E;IAC/E,wEAAwE;IAExE,yFAAyF;IACzF,0CAA0C;IAC1C,aAAa;IACb,gDAAgD;IAChD,mDAAmD;IACnD,OAAO;IACP,MAAM;AACR,CAAC;AA5DD,4BA4DC;AAAA,CAAC","sourcesContent":["import '@feathersjs/transport-commons';\nimport { HookContext } from '@feathersjs/feathers';\nimport { Application } from './declarations';\n\nexport default function(app: Application) {\n  if(typeof app.channel !== 'function') {\n    // If no real-time functionality has been configured just return\n    return;\n  }\n\n  app.on('connection', (connection: any) => {\n    // On a new real-time connection, add it to the anonymous channel\n    app.channel('anonymous').join(connection);\n  });\n\n  app.on('login', (authResult: any, { connection }: any) => {\n    // connection can be undefined if there is no\n    // real-time connection, e.g. when logging in via REST\n    if(connection) {\n      // Obtain the logged in user from the connection\n      // const user = connection.user;\n      \n      // The connection is no longer anonymous, remove it\n      app.channel('anonymous').leave(connection);\n\n      // Add it to the authenticated user channel\n      app.channel('authenticated').join(connection);\n\n      // Channels can be named anything and joined on any condition \n      \n      // E.g. to send real-time events only to admins use\n      // if(user.isAdmin) { app.channel('admins').join(connection); }\n\n      // If the user has joined e.g. chat rooms\n      // if(Array.isArray(user.rooms)) user.rooms.forEach(room => app.channel(`rooms/${room.id}`).join(channel));\n      \n      // Easily organize users by email and userid for things like messaging\n      // app.channel(`emails/${user.email}`).join(channel);\n      // app.channel(`userIds/$(user.id}`).join(channel);\n    }\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  app.publish((data: any, hook: HookContext) => {\n    // Here you can add event publishers to channels set up in `channels.js`\n    // To publish only for a specific event use `app.publish(eventname, () => {})`\n\n    console.log('Publishing all events to all authenticated users. See `channels.js` and https://docs.feathersjs.com/api/channels.html for more information.'); // eslint-disable-line\n\n    // e.g. to publish all service events to all authenticated users use\n    return app.channel('authenticated');\n  });\n\n  // Here you can also add service specific event publishers\n  // e.g. the publish the `users` service `created` event to the `admins` channel\n  // app.service('users').publish('created', () => app.channel('admins'));\n  \n  // With the userid and email organization from above you can easily select involved users\n  // app.service('messages').publish(() => {\n  //   return [\n  //     app.channel(`userIds/${data.createdBy}`),\n  //     app.channel(`emails/${data.recipientEmail}`)\n  //   ];\n  // });\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6cdc4703ff1e044b8ce3a6c041f2a5c813e10102"},"/Users/ian/Documents/learning/feathers/feathers-chat/src/authentication.ts":{"path":"/Users/ian/Documents/learning/feathers/feathers-chat/src/authentication.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":31},"end":{"line":4,"column":74}},"3":{"start":{"line":5,"column":31},"end":{"line":5,"column":74}},"4":{"start":{"line":8,"column":25},"end":{"line":8,"column":77}},"5":{"start":{"line":9,"column":8},"end":{"line":12,"column":10}},"6":{"start":{"line":16,"column":27},"end":{"line":16,"column":74}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":71}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":81}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":60}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":57}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":51},"end":{"line":13,"column":5}},"line":7},"1":{"name":"default_1","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":18}},"loc":{"start":{"line":15,"column":24},"end":{"line":22,"column":1}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":0,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ian/Documents/learning/feathers/feathers-chat/src/authentication.ts","sources":["/Users/ian/Documents/learning/feathers/feathers-chat/src/authentication.ts"],"names":[],"mappings":";;AACA,+DAAgF;AAChF,2EAAiE;AACjE,2EAA6F;AAU7F,MAAM,cAAe,SAAQ,oCAAa;IACxC,KAAK,CAAC,aAAa,CAAC,OAAqB,EAAE,QAAa,EAAE,MAAc;QACtE,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QAEtE,OAAO;YACL,GAAG,QAAQ;YACX,KAAK,EAAE,OAAO,CAAC,KAAK;SACrB,CAAC;IACJ,CAAC;CACF;AAED,mBAAwB,GAAgB;IACtC,MAAM,cAAc,GAAG,IAAI,sCAAqB,CAAC,GAAG,CAAC,CAAC;IAEtD,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,4BAAW,EAAE,CAAC,CAAC;IAClD,cAAc,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,oCAAa,EAAE,CAAC,CAAC;IACtD,cAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,cAAc,EAAE,CAAC,CAAC;IAExD,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;IAC3C,GAAG,CAAC,SAAS,CAAC,mCAAY,EAAE,CAAC,CAAC;AAChC,CAAC;AATD,4BASC","sourcesContent":["import { ServiceAddons, Params } from '@feathersjs/feathers';\nimport { AuthenticationService, JWTStrategy } from '@feathersjs/authentication';\nimport { LocalStrategy } from '@feathersjs/authentication-local';\nimport { expressOauth, OAuthStrategy, OAuthProfile } from '@feathersjs/authentication-oauth';\n\nimport { Application } from './declarations';\n\ndeclare module './declarations' {\n  interface ServiceTypes {\n    'authentication': AuthenticationService & ServiceAddons<any>;\n  }\n}\n\nclass GitHubStrategy extends OAuthStrategy {\n  async getEntityData(profile: OAuthProfile, existing: any, params: Params) {\n    const baseData = await super.getEntityData(profile, existing, params);\n\n    return {\n      ...baseData,\n      email: profile.email\n    };\n  }\n}\n\nexport default function(app: Application) {\n  const authentication = new AuthenticationService(app);\n\n  authentication.register('jwt', new JWTStrategy());\n  authentication.register('local', new LocalStrategy());\n  authentication.register('github', new GitHubStrategy());\n\n  app.use('/authentication', authentication);\n  app.configure(expressOauth());\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5f426250f248fb1c293aceda2d6f0b195d8cb7fa"}}